{"version":3,"sources":["compponents/Header.js","App.js","index.js"],"names":["Header","className","App","useState","countries","setCountries","refr","setRefr","dummy","useEffect","a","fetch","co","json","data","co1","data1","final","concat","fetchData","length","onClick","refresh","map","country","name","capital","src","flags","alt","width","height","style","fontSize","color","fontWeight","region","population","textAlign","borders","e","languages","nativeName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAGe,SAASA,IACtB,OAAO,qBAAKC,UAAU,UAAf,6B,MCAM,SAASC,IACtB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAA/D,mBAAOK,EAAP,UAkBA,OAbAC,qBAAU,WAAM,4CACd,oCAAAC,EAAA,sEACmBC,MAAM,mDADzB,cACQC,EADR,gBAEqBA,EAAGC,OAFxB,cAEQC,EAFR,gBAGoBH,MAChB,mDAJJ,cAGQI,EAHR,iBAMsBA,EAAIF,OAN1B,QAMQG,EANR,OAOQC,EAAQH,EAAKI,OAAOF,GAC1BX,EAAa,GAAD,mBAAKD,GAAL,YAAmBa,KARjC,6CADc,uBAAC,WAAD,wBAWdE,KACC,CAACb,IAEF,gCACE,cAAC,EAAD,IACsB,IAArBF,EAAUgB,OACT,sBAAMnB,UAAU,cAAcoB,QArBpC,WACEhB,EAAa,IACbE,GAAQ,SAACe,GAAD,OAAaA,EAAU,MAmB3B,0BAGE,KACJ,qBAAKrB,UAAU,iBAAf,SACwB,IAArBG,EAAUgB,OACPhB,EAAUmB,KAAI,SAACC,GACb,OACE,sBAAKvB,UAAU,iBAAf,UACE,qBAAKA,UAAU,eAAf,SAA+BuB,EAAQC,OACvC,8BAAMD,EAAQE,UACd,qBACEC,IAAKH,EAAQI,MAAM,GACnBC,IAAI,OACJC,MAAM,MACNC,OAAO,MACP9B,UAAU,eAEZ,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,SAAf,UACE,sBACE+B,MAAO,CACLC,SAAU,OACVC,MAAO,QACPC,WAAY,OAJhB,oBASA,8BAAMX,EAAQY,YAEhB,sBAAKnC,UAAU,YAAf,UACE,sBACE+B,MAAO,CACLC,SAAU,OACVC,MAAO,QACPC,WAAY,OAJhB,wBASA,4CAGJ,6CACa,IACX,sBAAMH,MAAO,CAAEE,MAAO,SAAtB,SAAkCV,EAAQa,aAAmB,OAE/D,sBAAKL,MAAO,CAAEM,UAAW,UAAzB,UACE,sBAAMN,MAAO,CAAEE,MAAO,QAASC,WAAY,OAA3C,uBAGCX,EAAQe,QACLf,EAAQe,QAAQhB,KAAI,SAACiB,GACnB,OAAO,qCAAQA,EAAR,WAET,SAEN,sBAAKvC,UAAU,aAAf,UACE,sBAAKA,UAAU,SAAf,UACE,sBACE+B,MAAO,CACLC,SAAU,OACVC,MAAO,QACPC,WAAY,OAJhB,sBASA,8BAAMX,EAAQiB,UAAU,GAAGhB,UAE7B,sBAAKxB,UAAU,YAAf,UACE,sBACE+B,MAAO,CACLC,SAAU,OACVC,MAAO,QACPC,WAAY,OAJhB,yBASA,8BAAMX,EAAQiB,UAAU,GAAGC,yBAMrClC,EAAMe,KAAI,WACR,OACE,sBAAKtB,UAAU,kBAAf,UACE,qBAAKA,UAAU,eAAf,kBACA,0CACA,qBACE0B,IAAI,GACJE,IAAI,OACJC,MAAM,MACNC,OAAO,MACP9B,UAAU,eAEZ,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,SAAf,UACE,0CACA,0CAEF,sBAAKA,UAAU,YAAf,UACE,8CACA,6CAGJ,8CACa,wCAAkB,OAE/B,2CACU,wCAAkB,OAE5B,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,SAAf,UACE,4CACA,0CAEF,sBAAKA,UAAU,YAAf,UACE,mDACA,wDClJtB0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e6389336.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nexport default function Header() {\r\n  return <div className=\"heading\">Asian Countries</div>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./compponents/Header\";\r\nimport \"./App.css\";\r\n\r\nexport default function App() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [refr, setRefr] = useState(1);\r\n  const [dummy, setDummy] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 0]);\r\n  function refresh() {\r\n    setCountries([]);\r\n    setRefr((refresh) => refresh + 1);\r\n  }\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const co = await fetch(\"https://restcountries.com/v2/regionalbloc/asean\");\r\n      const data = await co.json();\r\n      const co1 = await fetch(\r\n        \"https://restcountries.com/v2/regionalbloc/saarc\"\r\n      );\r\n      const data1 = await co1.json();\r\n      const final = data.concat(data1);\r\n      setCountries([...countries, ...final]);\r\n    }\r\n    fetchData();\r\n  }, [refr]);\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {countries.length !== 0 ? (\r\n        <span className=\"refresh-btn\" onClick={refresh}>\r\n          Refresh Data\r\n        </span>\r\n      ) : null}\r\n      <div className=\"data-container\">\r\n        {countries.length !== 0\r\n          ? countries.map((country) => {\r\n              return (\r\n                <div className=\"item-container\">\r\n                  <div className=\"name-country\">{country.name}</div>\r\n                  <div>{country.capital}</div>\r\n                  <img\r\n                    src={country.flags[0]}\r\n                    alt=\"flag\"\r\n                    width=\"200\"\r\n                    height=\"100\"\r\n                    className=\"image-flag\"\r\n                  />\r\n                  <div className=\"region-sub\">\r\n                    <div className=\"region\">\r\n                      <span\r\n                        style={{\r\n                          fontSize: \"15px\",\r\n                          color: \"black\",\r\n                          fontWeight: \"700\",\r\n                        }}\r\n                      >\r\n                        Region\r\n                      </span>\r\n                      <div>{country.region}</div>\r\n                    </div>\r\n                    <div className=\"subregion\">\r\n                      <span\r\n                        style={{\r\n                          fontSize: \"15px\",\r\n                          color: \"black\",\r\n                          fontWeight: \"700\",\r\n                        }}\r\n                      >\r\n                        Subregions\r\n                      </span>\r\n                      <div>...</div>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    Population{\" \"}\r\n                    <span style={{ color: \"green\" }}>{country.population}</span>{\" \"}\r\n                  </div>\r\n                  <div style={{ textAlign: \"center\" }}>\r\n                    <span style={{ color: \"black\", fontWeight: \"500\" }}>\r\n                      Borders -\r\n                    </span>\r\n                    {country.borders\r\n                      ? country.borders.map((e) => {\r\n                          return <span> {e}, </span>;\r\n                        })\r\n                      : \"...\"}\r\n                  </div>\r\n                  <div className=\"region-sub\">\r\n                    <div className=\"region\">\r\n                      <span\r\n                        style={{\r\n                          fontSize: \"15px\",\r\n                          color: \"black\",\r\n                          fontWeight: \"700\",\r\n                        }}\r\n                      >\r\n                        Language\r\n                      </span>\r\n                      <div>{country.languages[0].name}</div>\r\n                    </div>\r\n                    <div className=\"subregion\">\r\n                      <span\r\n                        style={{\r\n                          fontSize: \"15px\",\r\n                          color: \"black\",\r\n                          fontWeight: \"700\",\r\n                        }}\r\n                      >\r\n                        Native name\r\n                      </span>\r\n                      <div>{country.languages[0].nativeName}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          : dummy.map(() => {\r\n              return (\r\n                <div className=\"item-container1\">\r\n                  <div className=\"name-country\">name</div>\r\n                  <div>capital</div>\r\n                  <img\r\n                    src=\"\"\r\n                    alt=\"flag\"\r\n                    width=\"200\"\r\n                    height=\"100\"\r\n                    className=\"image-flag\"\r\n                  />\r\n                  <div className=\"region-sub\">\r\n                    <div className=\"region\">\r\n                      <span>Region</span>\r\n                      <div>name</div>\r\n                    </div>\r\n                    <div className=\"subregion\">\r\n                      <span>Subregions</span>\r\n                      <div>name</div>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    Population <span>name</span>{\" \"}\r\n                  </div>\r\n                  <div>\r\n                    Borders <span>name</span>{\" \"}\r\n                  </div>\r\n                  <div className=\"region-sub\">\r\n                    <div className=\"region\">\r\n                      <span>Language</span>\r\n                      <div>name</div>\r\n                    </div>\r\n                    <div className=\"subregion\">\r\n                      <span>Native language</span>\r\n                      <div>name</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}